{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\n// MIT License\n// Copyright (c) 2021 Emmadi Sumith Kumar\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nimport { parsePhoneNumber } from \"awesome-phonenumber\";\nimport axios from \"axios\";\n/**\n * Verifying mobile number with OTP\n *\n * @name truecallerjs.verifyOtp\n * @function verifyOtp\n * @param {string} phonenumber - Phone number in international format.\n * @param {Object} json_data - JSON response of the login(phonenumber) function.\n * @param {string} otp - 6-digit OTP.\n * @returns {Promise<Object>} - JSON output containing the installationId.\n *\n * Follow this documentation for more details: https://github.com/sumithemmadi/truecallerjs/tree/main/docs\n */\nasync function verifyOtp(phonenumber, json_data, otp) {\n  const pn = parsePhoneNumber(phonenumber);\n  if (!pn.valid) {\n    throw new Error(\"Phone number should be in international format.\");\n  }\n  const postData = {\n    countryCode: pn.regionCode,\n    dialingCode: pn.countryCode,\n    phoneNumber: pn.number.significant,\n    requestId: json_data.requestId,\n    token: otp\n  };\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json; charset=UTF-8\",\n      \"accept-encoding\": \"gzip\",\n      \"user-agent\": \"Truecaller/11.75.5 (Android;10)\",\n      clientsecret: \"lvc22mp3l1sfv6ujg83rd17btt\"\n    },\n    url: \"https://account-asia-south1.truecaller.com/v1/verifyOnboardingOtp\",\n    data: postData\n  };\n  const res = await axios(options);\n  return res.data;\n}\nexport { verifyOtp };","map":{"version":3,"names":["parsePhoneNumber","axios","verifyOtp","phonenumber","json_data","otp","pn","valid","Error","postData","countryCode","regionCode","dialingCode","phoneNumber","number","significant","requestId","token","options","method","headers","clientsecret","url","data","res"],"sources":["C:/Users/LENOVO/node_modules/truecallerjs/dist/verifyOtp.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n// MIT License\n// Copyright (c) 2021 Emmadi Sumith Kumar\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nimport { parsePhoneNumber } from \"awesome-phonenumber\";\nimport axios from \"axios\";\n/**\n * Verifying mobile number with OTP\n *\n * @name truecallerjs.verifyOtp\n * @function verifyOtp\n * @param {string} phonenumber - Phone number in international format.\n * @param {Object} json_data - JSON response of the login(phonenumber) function.\n * @param {string} otp - 6-digit OTP.\n * @returns {Promise<Object>} - JSON output containing the installationId.\n *\n * Follow this documentation for more details: https://github.com/sumithemmadi/truecallerjs/tree/main/docs\n */\nasync function verifyOtp(phonenumber, json_data, otp) {\n    const pn = parsePhoneNumber(phonenumber);\n    if (!pn.valid) {\n        throw new Error(\"Phone number should be in international format.\");\n    }\n    const postData = {\n        countryCode: pn.regionCode,\n        dialingCode: pn.countryCode,\n        phoneNumber: pn.number.significant,\n        requestId: json_data.requestId,\n        token: otp,\n    };\n    const options = {\n        method: \"POST\",\n        headers: {\n            \"content-type\": \"application/json; charset=UTF-8\",\n            \"accept-encoding\": \"gzip\",\n            \"user-agent\": \"Truecaller/11.75.5 (Android;10)\",\n            clientsecret: \"lvc22mp3l1sfv6ujg83rd17btt\",\n        },\n        url: \"https://account-asia-south1.truecaller.com/v1/verifyOnboardingOtp\",\n        data: postData,\n    };\n    const res = await axios(options);\n    return res.data;\n}\nexport { verifyOtp };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,gBAAgB,QAAQ,qBAAqB;AACtD,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,SAASA,CAACC,WAAW,EAAEC,SAAS,EAAEC,GAAG,EAAE;EAClD,MAAMC,EAAE,GAAGN,gBAAgB,CAACG,WAAW,CAAC;EACxC,IAAI,CAACG,EAAE,CAACC,KAAK,EAAE;IACX,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;EACtE;EACA,MAAMC,QAAQ,GAAG;IACbC,WAAW,EAAEJ,EAAE,CAACK,UAAU;IAC1BC,WAAW,EAAEN,EAAE,CAACI,WAAW;IAC3BG,WAAW,EAAEP,EAAE,CAACQ,MAAM,CAACC,WAAW;IAClCC,SAAS,EAAEZ,SAAS,CAACY,SAAS;IAC9BC,KAAK,EAAEZ;EACX,CAAC;EACD,MAAMa,OAAO,GAAG;IACZC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,iCAAiC;MACjD,iBAAiB,EAAE,MAAM;MACzB,YAAY,EAAE,iCAAiC;MAC/CC,YAAY,EAAE;IAClB,CAAC;IACDC,GAAG,EAAE,mEAAmE;IACxEC,IAAI,EAAEd;EACV,CAAC;EACD,MAAMe,GAAG,GAAG,MAAMvB,KAAK,CAACiB,OAAO,CAAC;EAChC,OAAOM,GAAG,CAACD,IAAI;AACnB;AACA,SAASrB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}