{"ast":null,"code":"// MIT License\n// Copyright (c) 2021 Emmadi Sumith Kumar\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nimport axios from \"axios\";\nimport { parsePhoneNumber } from \"awesome-phonenumber\";\nimport { device } from \"./data/phones.js\";\nfunction generateRandomString(length) {\n  let result = \"\";\n  const characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n/**\n * Login to Truecaller.\n *\n * @param {string} phoneNumber - Phone number in international format.\n * @returns {Promise<LoginResponse>} - Promise that resolves to the login response containing the requestId used for OTP verification.\n */\nasync function login(phoneNumber) {\n  const pn = parsePhoneNumber(phoneNumber);\n  if (!(pn !== null && pn !== void 0 && pn.valid)) {\n    throw new Error(\"Invalid phone number.\");\n  }\n  const postUrl = \"https://account-asia-south1.truecaller.com/v2/sendOnboardingOtp\";\n  const data = {\n    countryCode: pn.regionCode,\n    dialingCode: pn.countryCode,\n    installationDetails: {\n      app: {\n        buildVersion: 5,\n        majorVersion: 11,\n        minorVersion: 7,\n        store: \"GOOGLE_PLAY\"\n      },\n      device: {\n        deviceId: generateRandomString(16),\n        language: \"en\",\n        manufacturer: device.manufacturer,\n        model: device.model,\n        osName: \"Android\",\n        osVersion: \"10\",\n        mobileServices: [\"GMS\"]\n      },\n      language: \"en\"\n    },\n    phoneNumber: pn.number.significant,\n    region: \"region-2\",\n    sequenceNo: 2\n  };\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json; charset=UTF-8\",\n      \"accept-encoding\": \"gzip\",\n      \"user-agent\": \"Truecaller/11.75.5 (Android;10)\",\n      clientsecret: \"lvc22mp3l1sfv6ujg83rd17btt\"\n    },\n    url: postUrl,\n    data\n  };\n  const res = await axios(options);\n  return res.data;\n}\nexport { login };","map":{"version":3,"names":["axios","parsePhoneNumber","device","generateRandomString","length","result","characters","charactersLength","i","charAt","Math","floor","random","login","phoneNumber","pn","valid","Error","postUrl","data","countryCode","regionCode","dialingCode","installationDetails","app","buildVersion","majorVersion","minorVersion","store","deviceId","language","manufacturer","model","osName","osVersion","mobileServices","number","significant","region","sequenceNo","options","method","headers","clientsecret","url","res"],"sources":["C:/Users/LENOVO/node_modules/truecallerjs/dist/login.js"],"sourcesContent":["// MIT License\n// Copyright (c) 2021 Emmadi Sumith Kumar\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nimport axios from \"axios\";\nimport { parsePhoneNumber } from \"awesome-phonenumber\";\nimport { device } from \"./data/phones.js\";\nfunction generateRandomString(length) {\n    let result = \"\";\n    const characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n/**\n * Login to Truecaller.\n *\n * @param {string} phoneNumber - Phone number in international format.\n * @returns {Promise<LoginResponse>} - Promise that resolves to the login response containing the requestId used for OTP verification.\n */\nasync function login(phoneNumber) {\n    const pn = parsePhoneNumber(phoneNumber);\n    if (!pn?.valid) {\n        throw new Error(\"Invalid phone number.\");\n    }\n    const postUrl = \"https://account-asia-south1.truecaller.com/v2/sendOnboardingOtp\";\n    const data = {\n        countryCode: pn.regionCode,\n        dialingCode: pn.countryCode,\n        installationDetails: {\n            app: {\n                buildVersion: 5,\n                majorVersion: 11,\n                minorVersion: 7,\n                store: \"GOOGLE_PLAY\",\n            },\n            device: {\n                deviceId: generateRandomString(16),\n                language: \"en\",\n                manufacturer: device.manufacturer,\n                model: device.model,\n                osName: \"Android\",\n                osVersion: \"10\",\n                mobileServices: [\"GMS\"],\n            },\n            language: \"en\",\n        },\n        phoneNumber: pn.number.significant,\n        region: \"region-2\",\n        sequenceNo: 2,\n    };\n    const options = {\n        method: \"POST\",\n        headers: {\n            \"content-type\": \"application/json; charset=UTF-8\",\n            \"accept-encoding\": \"gzip\",\n            \"user-agent\": \"Truecaller/11.75.5 (Android;10)\",\n            clientsecret: \"lvc22mp3l1sfv6ujg83rd17btt\",\n        },\n        url: postUrl,\n        data,\n    };\n    const res = await axios(options);\n    return res.data;\n}\nexport { login };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,oBAAoBA,CAACC,MAAM,EAAE;EAClC,IAAIC,MAAM,GAAG,EAAE;EACf,MAAMC,UAAU,GAAG,sCAAsC;EACzD,MAAMC,gBAAgB,GAAGD,UAAU,CAACF,MAAM;EAC1C,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,EAAEI,CAAC,EAAE,EAAE;IAC7BH,MAAM,IAAIC,UAAU,CAACG,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,gBAAgB,CAAC,CAAC;EAC7E;EACA,OAAOF,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeQ,KAAKA,CAACC,WAAW,EAAE;EAC9B,MAAMC,EAAE,GAAGd,gBAAgB,CAACa,WAAW,CAAC;EACxC,IAAI,EAACC,EAAE,aAAFA,EAAE,eAAFA,EAAE,CAAEC,KAAK,GAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC5C;EACA,MAAMC,OAAO,GAAG,iEAAiE;EACjF,MAAMC,IAAI,GAAG;IACTC,WAAW,EAAEL,EAAE,CAACM,UAAU;IAC1BC,WAAW,EAAEP,EAAE,CAACK,WAAW;IAC3BG,mBAAmB,EAAE;MACjBC,GAAG,EAAE;QACDC,YAAY,EAAE,CAAC;QACfC,YAAY,EAAE,EAAE;QAChBC,YAAY,EAAE,CAAC;QACfC,KAAK,EAAE;MACX,CAAC;MACD1B,MAAM,EAAE;QACJ2B,QAAQ,EAAE1B,oBAAoB,CAAC,EAAE,CAAC;QAClC2B,QAAQ,EAAE,IAAI;QACdC,YAAY,EAAE7B,MAAM,CAAC6B,YAAY;QACjCC,KAAK,EAAE9B,MAAM,CAAC8B,KAAK;QACnBC,MAAM,EAAE,SAAS;QACjBC,SAAS,EAAE,IAAI;QACfC,cAAc,EAAE,CAAC,KAAK;MAC1B,CAAC;MACDL,QAAQ,EAAE;IACd,CAAC;IACDhB,WAAW,EAAEC,EAAE,CAACqB,MAAM,CAACC,WAAW;IAClCC,MAAM,EAAE,UAAU;IAClBC,UAAU,EAAE;EAChB,CAAC;EACD,MAAMC,OAAO,GAAG;IACZC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,iCAAiC;MACjD,iBAAiB,EAAE,MAAM;MACzB,YAAY,EAAE,iCAAiC;MAC/CC,YAAY,EAAE;IAClB,CAAC;IACDC,GAAG,EAAE1B,OAAO;IACZC;EACJ,CAAC;EACD,MAAM0B,GAAG,GAAG,MAAM7C,KAAK,CAACwC,OAAO,CAAC;EAChC,OAAOK,GAAG,CAAC1B,IAAI;AACnB;AACA,SAASN,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}